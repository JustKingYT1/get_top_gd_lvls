# search.py
import json
import settings

class LevelSearch:
    """–ö–ª–∞—Å—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ —É—Ä–æ–≤–Ω–µ–π –ø–æ –∏–º–µ–Ω–∏ –∏–ª–∏ —Ä–∞–Ω–≥—É."""

    def __init__(self, data):
        self.data = data

    @classmethod
    def from_file(cls, path=settings.OUTPUT_FILE):
        try:
            with open(path, "r", encoding="utf-8") as f:
                data = json.load(f)
            print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(data)} —É—Ä–æ–≤–Ω–µ–π –∏–∑ {path}")
            return cls(data)
        except FileNotFoundError:
            print("‚ùå –§–∞–π–ª –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return cls([])

    def search(self, query):
        if query.isdigit():
            rank = int(query)
            return [d for d in self.data if d["rank"] == rank]
        query_low = query.lower()
        return [d for d in self.data if query_low in d["name"].lower()]

    def interactive(self):
        while True:
            q = input("\nüîé –í–≤–µ–¥–∏ —Ä–∞–Ω–≥ –∏–ª–∏ —á–∞—Å—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è (Enter ‚Äî –≤—ã—Ö–æ–¥): ").strip()
            if not q:
                break
            results = self.search(q)
            if not results:
                print("‚ùå –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
                continue
            for r in results:
                print(f"#{r['rank']} ‚Äî {r['name']}\n  {r['link']}")
